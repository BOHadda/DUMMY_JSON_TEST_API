{
	"info": {
		"_postman_id": "dbbcdf9d-4382-40c0-ae34-447de8edb871",
		"name": "Posts",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "32554034"
	},
	"item": [
		{
			"name": "Get all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the total\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.total).to.eql(150);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": "{{BaseUrl}}{{RessourcePost}}"
			},
			"response": []
		},
		{
			"name": "Search posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the total\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.total).to.eql(11);\r",
							"});\r",
							"pm.test(\"verify existing of love\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"love\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}{{RessourcePost}}/search?q=love",
					"host": [
						"{{BaseUrl}}{{RessourcePost}}"
					],
					"path": [
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "love"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Limit and skip posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the limit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.limit).to.eql(10);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.skip).to.eql(10);\r",
							"});\r",
							"pm.test(\"check the title of post with id 14\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.posts[3].title).to.eql(\"The paper was blank.\");\r",
							"});\r",
							"pm.test(\"check the reaction of post with id 14\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.posts[3].reactions).to.eql(0);\r",
							"});\r",
							"pm.test(\"check the userId of post with id 14\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.posts[3].userId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{BaseUrl}}{{RessourcePost}}?limit=10&skip=10&select=title,reactions,userId",
					"host": [
						"{{BaseUrl}}{{RessourcePost}}"
					],
					"query": [
						{
							"key": "limit",
							"value": "10"
						},
						{
							"key": "skip",
							"value": "10"
						},
						{
							"key": "select",
							"value": "title,reactions,userId"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all posts by user id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check an example of post with userId equal to 5\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.posts[2].userId).to.eql(5);\r",
							"});\r",
							"pm.test(\"check the total\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.total).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": "{{BaseUrl}}{{RessourcePost}}/user/5"
			},
			"response": []
		},
		{
			"name": "Get post's comments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the post id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.comments[0].postId).to.eql(1);\r",
							"});\r",
							"pm.test(\"check the body of comment\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.comments[0].body).to.eql(\"You are my safest place.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": "{{BaseUrl}}{{RessourcePost}}/1/comments"
			},
			"response": []
		},
		{
			"name": "Add a new post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the post id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(151);\r",
							"});\r",
							"pm.test(\"check the post title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"I am in love with someone.\");\r",
							"});\r",
							"pm.test(\"check the userId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"I am in love with someone.\",\r\n    \"userId\": 5\r\n    /* other post data */\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{BaseUrl}}{{RessourcePost}}/add"
			},
			"response": []
		},
		{
			"name": "Get a single post",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"/*pm.globals.set(\"ExpectedResult_Sg_Post\", ({\r",
							"    \"id\": 1,\r",
							"    \"title\": \"His mother had always taught him\",\r",
							"    \"body\": \"His mother had always taught him not to ever think of himself as better than others. He'd tried to live by this motto. He never looked down on those who were less fortunate or who had less money than him. But the stupidity of the group of people he was talking to made him change his mind.\",\r",
							"    \"userId\": 9,\r",
							"    \"tags\": [\r",
							"        \"history\",\r",
							"        \"american\",\r",
							"        \"crime\"\r",
							"    ],\r",
							"    \"reactions\": 2\r",
							"}));*/\r",
							"console.log(\"the value of expected result is : \", pm.globals.get(\"ExpectedResult_Sg_Post\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"validate expected result structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.eql).to.eql(pm.globals.get(\"ExpectedResult_Sg_Post\").json);\r",
							"});\r",
							"/*pm.test(\"validate expected result structure\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(pm.globals.get(\"ExpectedResult_Sg_Post\"));\r",
							"});*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": "{{BaseUrl}}{{RessourcePost}}/1"
			},
			"response": []
		},
		{
			"name": "Update a post title with put",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the post id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"check the post title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"I think I should shift to the moon\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"title\": \"I think I should shift to the moon\",\r\n    \"body\": \"His mother had always taught him not to ever think of himself as better than others. He'd tried to live by this motto. He never looked down on those who were less fortunate or who had less money than him. But the stupidity of the group of people he was talking to made him change his mind.\",\r\n    \"userId\": 9,\r\n    \"tags\": [\r\n        \"history\",\r\n        \"american\",\r\n        \"crime\"\r\n    ],\r\n    \"reactions\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{BaseUrl}}{{RessourcePost}}/1"
			},
			"response": []
		},
		{
			"name": "Update a post with patch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the post id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"check the post title\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.title).to.eql(\"His mother had always taught him\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"His mother had always taught him not to ever think of himself as better than others\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"His mother had always taught him\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{BaseUrl}}{{RessourcePost}}/1"
			},
			"response": []
		},
		{
			"name": "Delete a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check the post id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"confirm delete\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isDeleted).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true,
					"accept-encoding": true,
					"connection": true
				}
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "{{Accept}}",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "{{Accept-Encoding}}",
						"type": "text"
					},
					{
						"key": "Connection",
						"value": "{{Connection}}",
						"type": "text"
					}
				],
				"url": "{{BaseUrl}}{{RessourcePost}}/1"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Status code name has OK\", function () {",
					"    pm.response.to.have.status(\"OK\");",
					"});",
					"pm.test(\"Response time is less than 1000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(1000);",
					"});",
					"pm.test(\"Verify Content-Type,server and date are present\", function () {",
					"    pm.response.to.have.header(\"Content-Type\");",
					"    pm.response.to.have.header(\"date\");",
					"    pm.response.to.have.header(\"server\");",
					"    ",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "RessourcePost",
			"value": "/posts"
		}
	]
}